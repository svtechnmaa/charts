# Default values
# Global values. Define shared volumes and persistence volumes. For example:
global:
  sharedVolume:
    enabled: true
  redis:
    enabled: true
    host:
    port:
  icingadb:
    enabled: true
  sharedPersistenceVolume:
    - volumeName: icingaweb-volume
      pvcName: icingaweb-pvc
      storageSize: 10Mi
      path: /data
      accessModes: ReadWriteOnce #ReadWriteMany
      shareFor:
        - icingaweb
        - rundeck
      storageClass: icingaweb-hostpath
  database:
    director:
      enabled: true
      database: directordb
      username:
      password:
      # host: mariadb
      # port: 3306
    icingadb:
      enabled: true
      database: icingadb
      username:
      password:
      # host: mariadb
      # port: 3306
    icingaweb2:
      enabled: true
      database: icingaweb2db
      username:
      password:
      # host: mariadb
      # port: 3306

  api:
    port: 5665
    user: icingaAdmin
    password: icingaAdmin

clusterDomain: cluster.local

# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Change workloadType to Deployment, DaemonSet, or StatefulSet
workloadType: Deployment

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# init image
init:
  image:
    registry: docker.io
    repository: busybox
    tag: 1.33
    pullPolicy: IfNotPresent

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: svtechnmaa/svtech_icingaweb2
  tag: v1.1.0
  pullPolicy: IfNotPresent

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsGroup: 33
  runAsUser: 33

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  nodePortEnabled: false # set to true if using NodePort and you want to specify ports

  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  ports:
    - name: icingaweb
      port: 8080
      targetPort: 8080
      protocol: TCP
      # nodePort: 30080
  loadBalancerIP: "" # set to the IP you want to use for the LoadBalancer
  loadBalancerSourceRanges: [] # list of IP CIDRs allowed access to load balancer (if supported)


  # externalIPs: ["10.98.0.143"]

  ## Set the Cluster IP to use
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address
  ##
  # clusterIP: None

  annotations: {}
  
  externalTrafficPolicy: Cluster

  # Set the service SessionAffinity for session stickiness
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#proxy-mode-userspace
  sessionAffinity: ClientIP

  # Customize the SessionAntiAffinity configuration. The default value for sessionAffinityConfig.clientIP.timeoutSeconds is 10800 (3 hours)
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 7200

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe:
  # httpGet:
  #   path: /
  #   port: http
# readinessProbe:
  # httpGet:
  #   path: /
  #   port: http

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: icingaweb-http
    configMap:
      name: icingaweb-http
# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: icingaweb-http
    mountPath: /etc/apache2/conf-enabled/icingaweb2.conf
    subPath: icingaweb2.conf

nodeSelector: {}

tolerations: []

nodeAffinityPreset:
  type: ""
  key: ""
  values: []

affinity:
  # podAntiAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #   - labelSelector:
  #       matchLabels:
  #         app.kubernetes.io/name: traefik
  #     topologyKey: kubernetes.io/hostname

env:
  TZ: Asia/Ho_Chi_Minh

# Icingaweb authentication variables
auth:
  type: db
  #resource: # Add the name of the db resource used by Icinga Web 2 here. Default: Values.global.database.icingaweb2.database
  admin_user: icingaweb
  admin_password: juniper@123
# Icingaweb module variables
modules:
  director:
    enabled: false
  icingadb:
    enabled: true
  incubator:
    enabled: true
  grafana:
    enabled: true
    default_dashboard: icinga2-default
    default_dashboard_uid: icinga2-default
    default_dashboard_panelid: "1"