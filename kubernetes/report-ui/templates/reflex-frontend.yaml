apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: {{ .Chart.Name }}-frontend
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  name: {{ include "common.names.fullname" . }}-frontend
spec:
  replicas: {{ include "common.replicas" ( dict "replicaCount" .Values.frontend.replicaCount "global" .Values.global ) }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ .Chart.Name }}-frontend
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: {{ .Chart.Name }}-frontend
    spec:
      initContainers:
        - name: wait-for-backend
          image: {{ include "common.images.image" (dict "imageRoot" .Values.frontend.init.image) }}
          imagePullPolicy: {{ .Values.frontend.init.image.pullPolicy | quote }}
          command:
            - /bin/sh
            - -c
            - |
              until nc -zvw5 {{ .Chart.Name }}-backend {{ .Values.backend.service.port }}; do echo "Waiting for Backend..."; sleep 2; done
              until [ `ls -A /usr/share/nginx/html/ | grep 'completed' | wc -l` != 0 ];
              do
                echo "Waiting for Init Repo...";
                sleep 2;
              done
          {{- if and .Values.global.sharedPersistenceVolume .Values.global.sharedVolume.enabled }}
          volumeMounts:
            {{- range .Values.global.sharedPersistenceVolume }}

            {{- if has "report-ui" .shareFor }}
            - name: {{ .volumeName }}
              mountPath: {{ .path }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
            {{- end }}

            {{- end }}
          {{- end }}
      containers:
      - image: {{ include "common.images.image" ( dict "imageRoot" .Values.frontend.image ) }}
        {{- if .Values.frontend.image.pullPolicy }}
        imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
        {{- end }}
        name: reflex-frontend
        securityContext:
          runAsUser: 0
        env:
          - name: TZ
            value: {{ include "common.timezone" ( dict "timezone" .Values.timezone "global" .Values.global) }}
        volumeMounts:
        - name: nginx-config
          mountPath: /opt/bitnami/nginx/conf/server_blocks/proxy.conf
          subPath: nginx.conf
        {{- if and .Values.global.sharedPersistenceVolume .Values.global.sharedVolume.enabled }}
        {{- range .Values.global.sharedPersistenceVolume }}
        {{- if has "report-ui" .shareFor }}
        - name: {{ .volumeName }}
          mountPath: {{ .path }}
          {{- if .subPath }}
          subPath: {{ .subPath }}
          {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        ports:
        - containerPort: 80
          name: frontend
      volumes:
        - name: nginx-config
          configMap:
            name: reflex-fe-config
        {{- if and .Values.global.sharedPersistenceVolume .Values.global.sharedVolume.enabled }}
        {{- range .Values.global.sharedPersistenceVolume }}
        {{- if has "report-ui" .shareFor }}
        - name: {{ .volumeName }}
          persistentVolumeClaim:
            claimName: {{ .pvcName }}
        {{- end }}
        {{- end }}
        {{- end }}
      imagePullSecrets:
      - name: ghcr-pull-secret
