apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: {{ .Chart.Name }}-backend
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  name: {{ include "common.names.fullname" . }}-backend
spec:
  replicas: {{ include "common.replicas" ( dict "replicaCount" .Values.backend.replicaCount "global" .Values.global ) }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ .Chart.Name }}-backend
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: {{ .Chart.Name }}-backend
    spec:
      initContainers:
        - name: wait-for-mariadb
          image: {{ include "common.images.image" (dict "imageRoot" .Values.backend.init.image) }}
          imagePullPolicy: {{ .Values.backend.init.image.pullPolicy | quote }}
          command:
            - /bin/sh
            - -c
            - |
              {{- if .Values.backend.config.db_host }}
              until nc -zvw5 {{ .Values.backend.config.db_host }} 3306; do echo "Waiting for MariaDB..."; sleep 2; done
              {{- else }}
              until nc -zvw5 mariadb 3306; do echo "Waiting for MariaDB..."; sleep 2; done
              {{- end }}
      containers:
      - image: {{ include "common.images.image" ( dict "imageRoot" .Values.backend.image "global" .Values.global) }}
        {{- if .Values.backend.image.pullPolicy }}
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        {{- end }}
        name: reflex-backend
        command:
          - bash
          - -ec
          - |
            if [ -d alembic ]; then
              reflex db migrate
            fi
            reflex run --env prod --backend-only --backend-port 8000
        env:
          - name: TZ
            value: {{ include "common.timezone" ( dict "timezone" .Values.timezone "global" .Values.global) }}
        ports:
        - containerPort: 8000
          name: backend
        volumeMounts:
        - name: report-ui-env
          mountPath: /app/.env
          subPath: .env
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ping
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 30
      volumes:
      - name: report-ui-env
        secret:
          secretName: {{ include "common.names.fullname" . }}-env
      imagePullSecrets:
      - name: ghcr-pull-secret
