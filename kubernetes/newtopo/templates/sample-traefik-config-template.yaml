http:
  middlewares:
    -auth:
      headers:
        customRequestHeaders:
          Authorization: "Basic YWRtaW46YWRtaW4="
    cors:
      headers:
        frameDeny: false
        browserXssFilter: false
        stsSeconds: 15768000
        contentSecurityPolicy: "style-src 'self' 'unsafe-inline';" 
        customResponseHeaders:
          Access-Control-Allow-Credentials: "true"
          Access-Control-Allow-Headers: "Origin, X-Requested-With, Content-Type, Accept, Authorization"
          Access-Control-Allow-Methods: "GET,POST,PUT,DELETE,OPTIONS"
          Access-Control-Allow-Origin: "*"
    dashboard-auth:
      basicAuth:
        users:
          - "thrukadmin:$apr1$pQYgqo1w$FFSO5TyP2sh6vmlF8nGmv1"
    grafana-auth:
      headers:
        customRequestHeaders:
          Authorization: "Basic dGhydWthZG1pbjp0aHJ1a2FkbWlu"

  routers:
    default:
      middlewares: []
      rule: "PathPrefix(`/`)"
      service: ""
    default-tls:
      middlewares: []
      rule: "PathPrefix(`/`)"
      service: ""
      tls: {}
    backend:
      middlewares:
        - "cors"
      priority: 100
      rule: "PathPrefix(`/public`) || PathPrefix(`/api/v1`)"
      service: "backend"
    backend-tls:
      middlewares:
        - "cors"
      priority: 100
      rule: "PathPrefix(`/public`) || PathPrefix(`/api/v1`)"
      service: "backend"
      tls: {}
    dashboard:
      middlewares:
        - "dashboard-auth"
      rule: "(PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      service: "api@internal"
    dashboard-tls:
      middlewares: []
      rule: "PathPrefix(`/dashboard`)"
      service: "dashboard"
      tls: {}
    frontend:
      middlewares:
        - "cors"
      rule: >-
        Path(`/`) || PathPrefix(`/login`) || PathPrefix(`/logout`) || 
        PathPrefix(`/admin`) || PathPrefix(`/app`) || PathPrefix(`/build`) || 
        PathPrefix(`/api/visualizer`) || PathPrefix(`/api/datasources`) || 
        PathPrefix(`/api/metadata`) || PathPrefix(`/api/queries`) || 
        PathPrefix(`/api/templates`)
      service: "frontend"
    frontend-tls:
      middlewares:
        - "cors"
      rule: >-
        Path(`/`) || PathPrefix(`/login`) || PathPrefix(`/logout`) || 
        PathPrefix(`/admin`) || PathPrefix(`/app`) || PathPrefix(`/build`) || 
        PathPrefix(`/api/visualizer`) || PathPrefix(`/api/datasources`) || 
        PathPrefix(`/api/metadata`) || PathPrefix(`/api/queries`) || 
        PathPrefix(`/api/templates`)
      service: "frontend"
      tls: {}
    # gitlist:
    #   middlewares: 
    #   - "cors"
    #   rule: "PathPrefix(`/gitlist`)"
    #   service: "gitlist"
    # gitlist-tls:
    #   middlewares: []
    #   rule: "PathPrefix(`/gitlist`)"
    #   service: "gitlist"
    #   tls: {}
    # grafana:
    #   middlewares:
    #     - "grafana-auth"
    #   rule: "PathPrefix(`/grafana`)"
    #   service: "grafana"
    # grafana-tls:
    #   middlewares: []
    #   rule: "PathPrefix(`/grafana`)"
    #   service: "grafana"
    #   tls: {}
    # rundeck:
    #   middlewares: []
    #   rule: "PathPrefix(`/rundeck`)"
    #   service: "rundeck"
    # rundeck-tls:
    #   middlewares: []
    #   rule: "PathPrefix(`/rundeck`)"
    #   service: "rundeck"
    #   tls: {}
    # thruk:
    #   middlewares: []
    #   rule: "PathPrefix(`/thruk`)"
    #   service: "thruk"
    # thruk-tls:
    #   middlewares: []
    #   rule: "PathPrefix(`/thruk`)"
    #   service: "thruk"
    #   tls: {}

  serversTransports:
    localssl:
      insecureSkipVerify: true

  services:
    default:
      loadBalancer:
        servers:
          - url: "https://10.98.250.241"
        serversTransport: "localssl"
    backend:
      loadBalancer:
        servers:
          - url: "http://go-backend"
    dashboard:
      loadBalancer:
        servers:
          - url: "http://192.168.100.134"
    frontend:
      loadBalancer:
        servers:
          - url: "http://topology-frontend"
    # gitlist:
    #   loadBalancer:
    #     servers:
    #       - url: "http://10.98.100.130"
    # grafana:
    #   loadBalancer:
    #     servers:
    #       - url: "http://grafana:3000"
    # rundeck:
    #   loadBalancer:
    #     servers:
    #       - url: "http://rundeck:4440"
    # thruk:
    #   loadBalancer:
    #     servers:
    #       - url: "http://thruk:80"
tls:
  stores:
    default:
      defaultCertificate:
        certFile: /tls/test.crt
        keyFile: /tls/test.key
  certificates:
    - certFile: /tls/test.crt
      keyFile: /tls/test.key
