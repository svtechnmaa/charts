# Default values for snmp-manager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  database:
    snmptt:
      enabled: false
      database: snmptt
      username:
      password:
      # host: mariadb
      # port: 3306
      # unknownTable: snmptt_unknown
  # Icinga2 api connection
  api:
    # host:  # only needed if Icinga2 runs out of cluster
    port: 5665
    user: icingaAdmin
    password: icingaAdmin
  sharedVolume:
    enabled: true
  sharedPersistenceVolume:
    # snmp-manager volume
    - volumeName: snmp-manager-volume
      pvcName: snmp-manager-pvc
      storageSize: 10Mi
      path: /etc/snmptt/
      accessModes: ReadWriteMany
      shareFor:
        - snmp-manager
      storageClass: seaweedfs-storage
      # storageClass: snmp-manager-hostpath # for hostPath PV
      # folderName: snmp-manager-conf # for hostPath PV
clusterDomain: cluster.local

image:
  repository: svtechnmaa/svtech_snmp_manager
  tag: v1.1.2
  pullPolicy: IfNotPresent
  debug: false
containerPort:
  snmp-manager: 162
env:
  TZ: Asia/Ho_Chi_Minh
  # Set the environment variable to enable logging events to the database. 1: enable, 0: disable
  MYSQL_DBI_ENABLE: "1"
service:
  type: ClusterIP
  # Uncomment this if you want to use LoadBalancer. Change the ip address to your own IP
  # loadBalancerIP: 10.98.6.17
  port: 162
  protocol: UDP
  # nodePort: 30162 # comment this if you want to use LoadBalancer
  externalTrafficPolicy: Local
  sessionAffinity: ClientIP
  ## Customize the SessionAffinity configuration. The default value for sessionAffinityConfig.clientIP.timeoutSeconds is 10800 (3 hours)
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 7200
replicaCount: 2
persistence:
  enabled: true
  storageClass: "snmp-manager"
  accessModes:
    - ReadWriteOnce
  size: 10Mi
  # mountPath on Container
  mountPath: /etc/snmptt/
  # hostPath: mount path on Host
  hostPath: snmp-manager-conf # full path: {{ $basePath }}/{{ $namespace }}/{{ $hostPath }}. Eg: /opt/shared/default/snmp-manager-config
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/component: snmp-manager
          # app.kubernetes.io/instance: nms
          app.kubernetes.io/name: snmp-manager
      topologyKey: app.kubernetes.io/hostname

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  enabled: false
  runAsGroup: 1000
  runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []


