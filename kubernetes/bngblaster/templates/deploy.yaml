apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: bngblaster
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ include "common.replicas" ( dict "replicaCount" .Values.replicaCount "global" .Values.global ) }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: bngblaster
  strategy: 
    type: {{ .Values.updateStrategy }}
    {{- if (eq "Recreate" .Values.updateStrategy) }}
    rollingUpdate: null
    {{- end }}
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: bngblaster
    spec:
      imagePullSecrets:
        - name: ghcr-pull-secret
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}

      initContainers:
        - name: wait-for-init-repo
          image: {{ include "common.images.image" (dict "imageRoot" .Values.init.image) }}
          imagePullPolicy: {{ .Values.init.image.pullPolicy | quote }}
          command:
            - /bin/sh
            - -c
            - |
                until [ `ls -l /BNGBlaster_web_client | grep -v "total" | wc -l` == {{ .Values.persistentData | len }} ];
                do
                  echo "Waiting for Init Repo...";
                  sleep 2;
                done

          volumeMounts:
            - name: {{ .Values.sharedVolume.volumeName }}
              mountPath: {{ .Values.sharedVolume.path }}
      containers:
      - image: {{ include "common.images.image" ( dict "imageRoot" .Values.image "global" .Values.global ) }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        {{- if .Values.securityContext.enabled }}
        securityContext:
          runAsUser: {{ .Values.securityContext.runAsUser }}
        {{- end }}
        name: bngblaster
        ports:
          - name: bngblaster
            containerPort: 8505
        volumeMounts:
          {{- range $subpath := .Values.persistentData }}
          {{- with $}}
          - name: {{ .Values.sharedVolume.volumeName }}
            mountPath: {{ .Values.sharedVolume.path }}/{{ $subpath }}
            subPath: {{ $subpath }}
          {{- end }}
          {{- end }}
                     
      volumes:
      - name: {{ .Values.sharedVolume.volumeName }}
        persistentVolumeClaim:
          claimName: {{ .Values.sharedVolume.pvcName }}
